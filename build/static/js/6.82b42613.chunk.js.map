{"version":3,"sources":["views/LoginView/LoginView.module.css","views/LoginView/LoginView.jsx"],"names":["module","exports","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","MyButton","styled","MaterialButton","width","backgroundColor","color","className","styles","header","onSubmit","e","preventDefault","authOperations","login","form","autoComplete","TextField","input","type","name","value","onChange","evt","target","label","id"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,OAAS,0BAA0B,KAAO,wBAAwB,MAAQ,2B,uKCiG7E,SAASC,IACtB,IAAMC,EAAWC,cADiB,EAERC,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGFF,mBAAS,IAHP,mBAG3BG,EAH2B,KAGjBC,EAHiB,KA6B5BC,EAAWC,YAAOC,IAAPD,CAAuB,CACpCE,MAAO,cACPC,gBAAiB,gBACjBC,MAAO,UAGX,OACI,gCACE,oBAAIC,UAAWC,IAAOC,OAAtB,gHAEA,uBACEC,SAtBa,SAAAC,GACnBA,EAAEC,iBAKFlB,EAASmB,IAAeC,MAAM,CAAEjB,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAeNO,UAAWC,IAAOO,KAClBC,aAAa,MAHf,UAKE,cAACC,EAAA,EAAD,CACEV,UAAWC,IAAOU,MAClBC,KAAK,QACLC,KAAK,QACLC,MAAOxB,EACPyB,SA5CU,SAAAC,GAClBzB,EAASyB,EAAIC,OAAOH,QA4CZI,MAAM,mCAGR,cAACR,EAAA,EAAD,CACEV,UAAWC,IAAOU,MAClBQ,GAAG,WACHP,KAAK,WACLC,KAAK,WACLC,MAAOtB,EACPuB,SAnDa,SAAAC,GACrBvB,EAAYuB,EAAIC,OAAOH,QAmDfI,MAAM,yCAGR,cAACxB,EAAD,CAAUkB,KAAK,SAAf","file":"static/js/6.82b42613.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"LoginView_header__1QySx\",\"form\":\"LoginView_form__J6ApL\",\"input\":\"LoginView_input__1Bz7u\"};","/*import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport styles from './LoginView.module.css';\n\nimport MaterialButton from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { styled } from '@material-ui/core/styles';\nimport notification from '../../components/notification';\n\nclass LoginView extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  isNotValid = ({ email, password }) => {\n    if (email === '' || password === '') {\n      return true;\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.isNotValid(this.state)) {\n      notification('Please fill out all required fields');\n      return;\n    }\n\n    this.props.onLogin(this.state);\n\n    this.setState({ email: '', password: '' });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    const MyButton = styled(MaterialButton)({\n      width: 'fit-content',\n      backgroundColor: 'palegoldenrod',\n      color: 'olive',\n    });\n\n    return (\n      <div>\n        <h1 className={styles.header}>Сторінка для входу</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          className={styles.form}\n          autoComplete=\"off\"\n        >\n          <TextField\n            className={styles.input}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            label=\"Пошта\"\n          />\n\n          <TextField\n            className={styles.input}\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            label=\"Пароль\"\n          />\n\n          <MyButton type=\"submit\">Вхід</MyButton>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.login,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginView);*/\n\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport styles from './LoginView.module.css';\nimport MaterialButton from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { styled } from '@material-ui/core/styles';\n//import notification from '../../components/notification';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const updateEmail = evt => {\n    setEmail(evt.target.value);\n  };\n  const updatePassword = evt => {\n    setPassword(evt.target.value);\n  };\n\n  /*const isNotValid = ({ email, password }) => {\n    if (email === '' || password === '') {\n      return true;\n    }\n  };*/\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*if (isNotValid()) {\n      notification('Please fill out all required fields');\n      return;\n    }*/\n    dispatch(authOperations.login({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  const MyButton = styled(MaterialButton)({\n      width: 'fit-content',\n      backgroundColor: 'palegoldenrod',\n      color: 'olive',\n    });\n\n  return (\n      <div>\n        <h1 className={styles.header}>Сторінка для входу</h1>\n\n        <form\n          onSubmit={handleSubmit}\n          className={styles.form}\n          autoComplete=\"off\"\n        >\n          <TextField\n            className={styles.input}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={updateEmail}\n            label=\"Пошта\"\n          />\n\n          <TextField\n            className={styles.input}\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={updatePassword}\n            label=\"Пароль\"\n          />\n\n          <MyButton type=\"submit\">Вхід</MyButton>\n        </form>\n      </div>\n    );\n  }"],"sourceRoot":""}